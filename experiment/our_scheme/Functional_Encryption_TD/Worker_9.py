import gmpy2 as gy
import System_Params
import time


'''-----------------------------------数据参数部分-----------------------------------'''
U_ID = [1,2,3,4,5]
Mission = [1,2,3,4,5]

N = System_Params.N

#感知数据
Task_data_9 = [6500,130,175,71,1900]

#扰动
alpha_9 = [48623361593403789316428535969317064530714456201628671361639035403693876576704,
          80784874429251842388832045434779236362764810205959439166878424611570650297881,
          58352991835940127247214466748328378337271782853490820375504749954439872709319,
          10827998448947705453740509451623197092332146734030359153145444172475834481420,
          42206922366291643865051189848072143512302276533955325280189998516140809922759]

#用户9的公私钥
public_key = System_Params.public_key[8]
private_key = System_Params.private_key[8]

#用于零知识证明的两个随机数
Ra_1 = gy.mpz
Ra_2 = gy.mpz(189652375989193700686203639010154859068049775650498784776800817942972368428680244170187532461248719930867335501282553229142070710117161894904150734270484822824185009350039599430227742873399054283217503274696089739530327244951357130843274770556058264361574226443549040752323156505368558168617947735374027600892435766898581552587264459474934395733402226153483559521512179383202928021936641210050215638771496723814263089966565221231315025587531698721872427819741637547412015721686893458047428336405301337783962060369251678889130531065247836086343544647207296501359712837686644334721559081262937140136082269964808772626718200497938252002137389952935361685248761381038325066791321883421396187416850338500288472896767104788633145618795870361889896669666209748426355891368478243861977108455903439821657338975089967811452635335287247330022426008761704968331478633195102979505933240204961496069097581687619206830156728195117236596802565402471261411771419331778471368283775189666634222625156787324823313209555469671540212872484064190314675315790601671169700843315694992034924541564756887381540394633319806874244213417373961723092555832937422863797833358292517418343322498487287904518676301970472943752648912237509356727956934457437862369938803956854037354373261418211815559841103384445262569363757519915732482465059519765397471470105600926799548971673378656375383306921622445910850682574606623572088435522819834881985018448566216940837056473377956917586283624924715503775453604790457310299251721813409151762605417275192322541064805162676247665396677558257921108583004484108656072720935414880351591828892410958968261014721117322840027344864766634227157311471472620833038239977473600137590767190877731118626522422679831848041230668545682035977139282481849682943780292130290759321619344622966012959166170810139956669146006570122093994449957285640162059084589111991755695685459671971036452358094222436616709172055839755621037684944494800631817437987167850653885285281239437864931638781110800003824934927349788193352088662276021819404414306422949660354904300637678517929322988333378791178383280279875669282953190355370764851865802328022326904857271532305544936765763403979943638991078973292706586649890438214726098441428051107950683946377748044184009321351553682367002853736106407561332116818049188610018624968194155480836830807880363562257939583903296387519580773401297628371930682987341606979203606923716778521355189114335018545504347820670707852431898681225971351159165707115561193792617996819425105483887938506890136079582448142129364609885197765734245489543198140414377440509169762559955324218017895983459413857430135411103677582268283834137438067741609247328186948805009761292015649285814965292600409016614784747261416334408681345996620886114867313360286311853647139573734707860959946029684944487452727582202768622020164378769657017157532158241693675621899593045976686481890575630929301521883885841888160312811610226397130682124016848441869720595368340974195726889432911708249653652956595339768133201459195128837563708588525448343612507725763042113599310973673376494309157424608097805096882768416788907795466462170810548880464192572189964137521092509919623306286085133363010994003038786089078482326604851911038323661774053716571320263618736885079030647299288607569045760405142712433980851062099131809368203188312884529647626705675757218695123244545715409464146342070163620689883576389992367341819922970738028944220051048160239805293387343168134374413303035274670897333385277951982685708439399318242992415546300730129536025282047956032002112488522234417670197920205587047785012678509684981575981780733931617986561557282975860328643589121284158543607803853178630492343017466350824748158248366293185289441624467022833304249980056180248716355923943201722958750400350184423311893313864092479384035014078448268008490339403170981131)














'''-----------------------------------函数部分-----------------------------------'''

#加密感知数据
def FE_Encrypt_data():
    rm = []
    ct_1 = []
    ct_2 = []
    for m in range(len(Mission)):
        r,tmp1,tmp2 = System_Params.FE_Encrypt(Task_data_9[m],public_key)
        rm.append(r)
        ct_1.append(tmp1)
        ct_2.append(tmp2)
    return rm,ct_1,ct_2

#计算零知识证明
def ZKP_generate(rm):
    V_3 = (gy.powmod((1 + N),Ra_1,N**2) * gy.powmod(public_key,Ra_2,N**2)) % N**2
    data_sum = 0
    rm_sum = 0
    for m in range(len(Mission)):
        data_sum += Task_data_9[m]
        rm_sum += rm[m]
    h1 = (gy.powmod((1 + N),data_sum,N**2) * gy.powmod(public_key,rm_sum,N**2)) % N**2
    s = str(h1) + str(V_3)
    e = System_Params.hash_to_group(s,N)
    V_1 = e * data_sum + Ra_1
    V_2 = e * rm_sum + Ra_2
    return e,V_1,V_2,V_3

#扰动数据生成
def perbed_data_generate():
    perbed_data = []
    for m in range(len(Mission)):
        perbed_data.append(Task_data_9[m] - alpha_9[m])
    return perbed_data

#主函数
def main():
    #t = time.perf_counter()
    rm,ct_1,ct_2 = FE_Encrypt_data()
    e,V_1,V_2,V_3 = ZKP_generate(rm)
    perbed_data_generate()
    #print(f'cost: {time.perf_counter() - t:.8f}s')
    return ct_1,ct_2,e,V_1,V_2,V_3
#main()