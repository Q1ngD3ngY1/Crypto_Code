import gmpy2 as gy
import System_Params
import time
import sys

'''-----------------------------------数据参数部分-----------------------------------'''
U_ID = [1,2,3,4,5]
Mission = [1,2,3,4,5]

N = System_Params.N

USER_NUM = 5
TASK_NUM = 25

#感知数据
Task_data_1 = [4000,125,174,76,2000,4000,125,174,76,2000,4000,125,174,76,2000,4000,125,174,76,2000,4000,125,174,76,2000]

#扰动
alpha_1 = [22410642974084585442191727643918586647230232556525075962101709016346283694569, 
           68574235962049804543682472313140990616965871425187131346222779247232111250905, 
           43139019699327115711617780202783040092862808628341895782744823069479854552953, 
           107077420960787047367844643446953157544199051322244644306625049394723563232185, 
           16523082419060126492750584071126670442347370916635012443244906593568651899054,
           
           110438586017209887450179280829459401688087231643490099920795265644044261932511, 
           37105307030537039988022678537085291452325031359526329807537776969528831686425, 
           92938117346403131611721061906191193208723286610021864092519917726021443176727, 
           69096111760705943573314622999192185604939082041890480984362075605583421228132, 
           88282543211063824032235398553655229577400976826817027034777851470278982529952,
           
           100341745270499415663311873233218231670242647660264075745506770088471842508802, 
           89488274603804225389171841939230219448895365434485275894237396301495518554715, 
           76569347923444256958023287141542497510825013650419953885226359615086761829344, 
           81563584870525250942043937695609098622088217936406627218564791286200545169634, 
           5172851674036880809927411127200479633491103025233884330385647373127239362761,
           
           27028946396447814017188389527013970519524088371669835359929995423985710176660, 
           91425191432345758752664578760387393279775536730989321983648985485050233077173, 
           37106632025601916820095524384718640277484166308753206283110705565223659865125, 
           95633630757091468057553366794189296457777722005165038765088393126665176601628, 
           21700321939992927803622029800518580659321319021907177209646572761251239207312,
           
           80585351183873771092133446128001575555019360163939149939501448705632125870581, 
           32150157806281034227017859035132326258872818815410174001041145461220116763069, 
           100722857505322115198146208499220022084625070052526878791255362854105394503769, 
           106469741797494909039100335847700627678282797337420882550664990385374013346714, 
           7132804278995491665647913004073727223071894218922464596426342408363848451982]
size_alpha = 0
for m in range(TASK_NUM):
    size_alpha += sys.getsizeof(alpha_1[m])

#用户1的公私钥
public_key = System_Params.public_key[0]
private_key = System_Params.private_key[0]

#用于零知识证明的两个随机数
Ra_1 = gy.mpz
Ra_2 = gy.mpz














'''-----------------------------------函数部分-----------------------------------'''

#加密感知数据
def FE_Encrypt_data():
    rm = []
    ct_1 = []
    ct_2 = []
    for m in range(TASK_NUM):
        #t = time.perf_counter()
        r,tmp1,tmp2 = System_Params.FE_Encrypt(Task_data_1[m],public_key)
        #print(f'cost: {time.perf_counter() - t:.8f}s')
        rm.append(r)
        ct_1.append(tmp1)
        ct_2.append(tmp2)
    return rm,ct_1,ct_2
#rm,ct_1,ct_2 = FE_Encrypt_data()

#计算零知识证明
def ZKP_generate(rm):
    
    V_3 = (gy.powmod((1 + N),Ra_1,N**2) * gy.powmod(public_key,Ra_2,N**2)) % N**2
    
    data_sum = 0
    rm_sum = 0
    for m in range(TASK_NUM):
        data_sum += Task_data_1[m]
        rm_sum += rm[m]
    h1 = (gy.powmod((1 + N),data_sum,N**2) * gy.powmod(public_key,rm_sum,N**2)) % N**2
    s = str(h1) + str(V_3)
    e = System_Params.hash_to_group(s,N)
    V_1 = e * data_sum + Ra_1
    V_2 = e * rm_sum + Ra_2
    return e,V_1,V_2,V_3
'''
t = time.perf_counter()
ZKP_generate(rm)
print(f'cost: {time.perf_counter() - t:.8f}s')
'''

#扰动数据生成
def perbed_data_generate():
    perbed_data = []
    for m in range(TASK_NUM):
        perbed_data.append(Task_data_1[m] - alpha_1[m])
    return perbed_data

#主函数
def main():
    #t = time.perf_counter()
    rm,ct_1,ct_2 = FE_Encrypt_data()
    e,V_1,V_2,V_3 = ZKP_generate(rm)
    pd = perbed_data_generate()
    #print(f'cost: {time.perf_counter() - t:.8f}s')
    #print(size_alpha+sys.getsizeof(ct_1)+sys.getsizeof(ct_2)+sys.getsizeof(e)+sys.getsizeof(V_1)+sys.getsizeof(V_2)+sys.getsizeof(V_3)+sys.getsizeof(pd))
    return ct_1,ct_2,e,V_1,V_2,V_3
#main()