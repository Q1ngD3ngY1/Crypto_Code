import gmpy2 as gy
import System_Params
import time


'''-----------------------------------数据参数部分-----------------------------------'''
N = System_Params.N

U_ID = [1,2,3,4,5]
Mission = [1,2,3,4,5]

USER_NUM = 5
TASK_NUM = 25

Task_data_4 = [7000,120,170,50,1500,7000,120,170,50,1500,7000,120,170,50,1500,7000,120,170,50,1500,7000,120,170,50,1500]

alpha_4 = [62312548736497453480832483456650982941473578796180777137784969230386548643384, 
           64054305960678500929777904083234938546857537972919801355215258591653013196486, 
           19835137876183337719973403408040362000981861846821393735688467352621159088332, 
           18746778741407973218597871561523148403714854963385195740040441598826397863894, 
           20201604210824322513505661740215815043165403993207115450011218751649201516349,
           
           64319489048851532324315809274443245173568580931292578187609709518888738187870, 
           620267293515310378993121861842067004658214255791393188911110141928357728612, 
           57023193989683568739739210752361669886131873467621867845039573332943843441603, 
           61027345843942352680394957511608347626515939164221885864145658716321325519482, 
           83631467916978131746624347080935479606668223724092145157878977175481292579488,
           
           22037356287626745871116693210555756919633900699463377968475849850058340857595, 
           18334091981503713155729934834883289317573282149971450923858818979598056599322, 
           49269437468813983047081226226091137550704036343955284499107912240345111631819, 
           54376632048783410629814523980574571839627098984960515857200193816661241742237, 
           49861947272056015851262483357533431094963170070307377274120593412604982589944,
           
           59570315619285524355161408054244783400615402874492318919035157314876545030340, 
           108602451419317669571952729883991649762906668358612057736500138982476378807881, 
           15717803621597238813882976860792998177866559512791183131364307211176761506277, 
           14806996796080182058714852933734629420562453438498102625470459212135803145007, 
           21680531120567186364718496668574544777053950241190992174088527362220115859853, 
           
           53029544691914849058124010578912914260743308079462334553285570880688045937245, 
           86764537489341688819291702176868549487763773098877307030064773880241424768908, 
           23782076011164775602175793990786267142160872976126844175826609624016503012585, 
           99785974651708646840724572210778256755713177707187843043600802208027713095646, 
           92568377035646159171159644180226485180861997917454332207899427138690918537658]

#用户4的公私钥
public_key = System_Params.public_key[3]
private_key = System_Params.private_key[3]

#用于零知识证明的两个随机数
Ra_1 = gy.mpz
Ra_2 = gy.mpz














'''-----------------------------------函数部分-----------------------------------'''

#加密感知数据
def FE_Encrypt_data():
    rm = []
    ct_1 = []
    ct_2 = []
    for m in range(TASK_NUM):
        r,tmp1,tmp2 = System_Params.FE_Encrypt(Task_data_4[m],public_key)
        rm.append(r)
        ct_1.append(tmp1)
        ct_2.append(tmp2)
    return rm,ct_1,ct_2

#计算零知识证明
def ZKP_generate(rm):
    V_3 = (gy.powmod((1 + N),Ra_1,N**2) * gy.powmod(public_key,Ra_2,N**2)) % N**2
    data_sum = 0
    rm_sum = 0
    for m in range(TASK_NUM):
        data_sum += Task_data_4[m]
        rm_sum += rm[m]
    h1 = (gy.powmod((1 + N),data_sum,N**2) * gy.powmod(public_key,rm_sum,N**2)) % N**2
    s = str(h1) + str(V_3)
    e = System_Params.hash_to_group(s,N)
    V_1 = e * data_sum + Ra_1
    V_2 = e * rm_sum + Ra_2
    return e,V_1,V_2,V_3

#扰动数据生成
def perbed_data_generate():
    perbed_data = []
    for m in range(TASK_NUM):
        perbed_data.append(Task_data_4[m] - alpha_4[m])
    return perbed_data

#主函数
def main():
    #t = time.perf_counter()
    rm,ct_1,ct_2 = FE_Encrypt_data()
    e,V_1,V_2,V_3 = ZKP_generate(rm)
    perbed_data_generate()
    #print(f'cost: {time.perf_counter() - t:.8f}s')
    return ct_1,ct_2,e,V_1,V_2,V_3
#main()