import gmpy2 as gy
import System_Params
import time


'''-----------------------------------数据参数部分-----------------------------------'''
U_ID = [1,2,3,4,5]
Mission = [1,2,3,4,5]

N = System_Params.N

#感知数据
Task_data_7 = [6765,123,177,73,1955]

#扰动
alpha_7 = [65409304011354047237186567709588712533172325026467698363593724213142926988343,
          112842395804061866533073652196090434308350830110184467533442888048301276525193,
          22167638407458087456909011333524897573126473603610239756816857648794079344169,
          44328431963488937666383030730779073358015421103939273396866799542612616315874,
          104562966334847411476092532616950370438425171227329215456075892387002477874973]

#用户7的公私钥
public_key = System_Params.public_key[6]
private_key = System_Params.private_key[6]

#用于零知识证明的两个随机数
Ra_1 = gy.mpz
Ra_2 = gy.mpz














'''-----------------------------------函数部分-----------------------------------'''

#加密感知数据
def FE_Encrypt_data():
    rm = []
    ct_1 = []
    ct_2 = []
    for m in range(len(Mission)):
        r,tmp1,tmp2 = System_Params.FE_Encrypt(Task_data_7[m],public_key)
        rm.append(r)
        ct_1.append(tmp1)
        ct_2.append(tmp2)
    return rm,ct_1,ct_2

#计算零知识证明
def ZKP_generate(rm):
    V_3 = (gy.powmod((1 + N),Ra_1,N**2) * gy.powmod(public_key,Ra_2,N**2)) % N**2
    data_sum = 0
    rm_sum = 0
    for m in range(len(Mission)):
        data_sum += Task_data_7[m]
        rm_sum += rm[m]
    h1 = (gy.powmod((1 + N),data_sum,N**2) * gy.powmod(public_key,rm_sum,N**2)) % N**2
    s = str(h1) + str(V_3)
    e = System_Params.hash_to_group(s,N)
    V_1 = e * data_sum + Ra_1
    V_2 = e * rm_sum + Ra_2
    return e,V_1,V_2,V_3

#扰动数据生成
def perbed_data_generate():
    perbed_data = []
    for m in range(len(Mission)):
        perbed_data.append(Task_data_7[m] - alpha_7[m])
    return perbed_data

#主函数
def main():
    #t = time.perf_counter()
    rm,ct_1,ct_2 = FE_Encrypt_data()
    e,V_1,V_2,V_3 = ZKP_generate(rm)
    perbed_data_generate()
    #print(f'cost: {time.perf_counter() - t:.8f}s')
    return ct_1,ct_2,e,V_1,V_2,V_3
#main()