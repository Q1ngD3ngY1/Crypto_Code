import gmpy2 as gy
import System_Params
import time


'''-----------------------------------数据参数部分-----------------------------------'''
N = System_Params.N

U_ID = [1,2,3,4,5]
Mission = [1,2,3,4,5]

USER_NUM = 5
TASK_NUM = 25

Task_data_3 = [10000,130,176,70,3000,10000,130,176,70,3000,10000,130,176,70,3000,10000,130,176,70,3000,10000,130,176,70,3000]

alpha_3 = [63522566125187066556456764927373909912726211284218421011246448508692892883960, 
           2409208470116330926832310305110493054977239499386296942801684715449791849710, 
           113517673626352500141239206018899500102813717310384125436766574738317857361980, 
           37375605603684302646951325006261092494073445795806255322644516033219539977589, 
           114880691687877779925881942767867221717253840071213558427380246744809174197327,
           
           84878454492724156890692473022429866562587303151891578646443325256602367495224, 
           67024982683209163298112781081260983328866515074189854734106041088856750535141, 
           67289251102924369279640193706011109182492780977246632604738600725897862219398, 
           74196539734949063251218316599835010573375781780263598725419279417497802534054, 
           103035491321492063319453715640408659864141100610171689748449197739872601794110,
           
           90468123390936450218751360341074407346719736675459673081694357179611083294349, 
           12645883548661052429366963825503463912100475287103875168310940608683743678985, 
           17298584378449003517657383131516981400781260800849789598882870708642262049827, 
           43382465159345818425240719488884371862837229205349249451686248003358123837456, 
           17184333231159541990979421720429162150860787751672433060683713089622164361599,
           
           85905751912688945868853775351961027511796643417968681044297406470778836072369, 
           19619616534082545084214763288212327890201965937902651745172989752864033122098, 
           114305034837722378806922303182706642796704007694086261734007555841314998870105, 
           8422065751024866048555214560733396657858664308813983159970831314881993019989, 
           8836390970673200634276966705240403261784075441204861842087577814133831791933,
           
           103507277130645535632340892873715688492558113369849538491885677887520815187350, 
           105903851261146464135007034839760600071766339923319447722063319628668732286486, 
           3531388289266480766159286474225379969772569353527015040202934539198940814091, 
           109244683812902017961152300713558847361321765683346399206490596089519054694994, 
           80646533880311748120991725407185450632278907506741867369289780744460131677697]
#用户3的公私钥
public_key = System_Params.public_key[2]
private_key = System_Params.private_key[2]

#用于零知识证明的两个随机数
Ra_1 = gy.mpz
Ra_2 = gy.mpz














'''-----------------------------------函数部分-----------------------------------'''

#加密感知数据
def FE_Encrypt_data():
    rm = []
    ct_1 = []
    ct_2 = []
    for m in range(TASK_NUM):
        r,tmp1,tmp2 = System_Params.FE_Encrypt(Task_data_3[m],public_key)
        rm.append(r)
        ct_1.append(tmp1)
        ct_2.append(tmp2)
    return rm,ct_1,ct_2

#计算零知识证明
def ZKP_generate(rm):
    V_3 = (gy.powmod((1 + N),Ra_1,N**2) * gy.powmod(public_key,Ra_2,N**2)) % N**2
    data_sum = 0
    rm_sum = 0
    for m in range(TASK_NUM):
        data_sum += Task_data_3[m]
        rm_sum += rm[m]
    h1 = (gy.powmod((1 + N),data_sum,N**2) * gy.powmod(public_key,rm_sum,N**2)) % N**2
    s = str(h1) + str(V_3)
    e = System_Params.hash_to_group(s,N)
    V_1 = e * data_sum + Ra_1
    V_2 = e * rm_sum + Ra_2
    return e,V_1,V_2,V_3

#扰动数据生成
def perbed_data_generate():
    perbed_data = []
    for m in range(TASK_NUM):
        perbed_data.append(Task_data_3[m] - alpha_3[m])
    return perbed_data

#主函数
def main():
    #t = time.perf_counter()
    rm,ct_1,ct_2 = FE_Encrypt_data()
    e,V_1,V_2,V_3 = ZKP_generate(rm)
    perbed_data_generate()
    #print(f'cost: {time.perf_counter() - t:.8f}s')
    return ct_1,ct_2,e,V_1,V_2,V_3
#main()