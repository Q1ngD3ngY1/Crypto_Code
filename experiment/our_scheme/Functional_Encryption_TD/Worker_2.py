import gmpy2 as gy
import System_Params
import time


'''-----------------------------------数据参数部分-----------------------------------'''
N = System_Params.N

U_ID = [1,2,3,4,5]
Mission = [1,2,3,4,5]

USER_NUM = 5
TASK_NUM = 25

Task_data_2 = [4871,123,180,80,1738,4871,123,180,80,1738,4871,123,180,80,1738,4871,123,180,80,1738,4871,123,180,80,1738]

alpha_2 = [101695400669583813810746445139700392985776378025001584089118250770932796907834, 
           73764177157514071151095645437026121983640638485837445471844106164793206724575, 
           47612803961517067692539903164155489886296618497839475581217124605877787757442, 
           109689469928430497140731974242430685833999201365656390582176427565993107439132, 
           92925713401400710623839810079810339180963862369432977099052206202543808421338,
           
           94752408506926225570773195019809612845214636045571337885576118785662754995191, 
           11687759206386098973763929965057896084026776161639951755404541571829414014711, 
           98101203433084520088882495036948260163306830748215934614306663021376543883475, 
           38102405711692653302023266297565313745133299659810858812425357382507365916015, 
           31351092313530085678216533906886348462184720764998204665947362730103914949859,
           
           108256217076716964109438974786351886511253564069794761574328767752766679462127, 
           15304140838687734950794851206661960290863334014419538915774100706533318132795, 
           82709072283389713644412475662681448886797588096875278710224629168018261066720, 
           49200972638354163255526323479406776255588449968070470863452160171711604144269, 
           53974289389691794263604396858473687710078884961553653095054485268083791771845,
           
           64169344959044255051216342262515258231712726509616860542953998077159862372026, 
           28848551368724471150105066536199026936530435177406936086517386084231870534736, 
           104291015502183623363523952253866990437044158889510055157230242566028625067489, 
           74472569422699238850867629393141696075870640202705343764051579995959485140231, 
           87929536507094745589093662126427758521580752170605256266333061522368949810462,
           
           20104728617112084322057533231445223761718071244927479043679395685789025302176, 
           27432095162820795694090765961559759463694798565217005397503632817791681430075, 
           81391314733886202614293787929560138195007878203908655329116964820273868519922, 
           28130529658036641371124331944806630207247126504233319689450121382996670420227, 
           62755672704738825954244685788727478461029435805923521444111995765377310087073]
#用户2的公私钥
public_key = System_Params.public_key[1]
private_key = System_Params.private_key[1]

#用于零知识证明的两个随机数
Ra_1 = gy.mpz
Ra_2 = gy.mpz














'''-----------------------------------函数部分-----------------------------------'''

#加密感知数据
def FE_Encrypt_data():
    rm = []
    ct_1 = []
    ct_2 = []
    for m in range(TASK_NUM):
        r,tmp1,tmp2 = System_Params.FE_Encrypt(Task_data_2[m],public_key)
        rm.append(r)
        ct_1.append(tmp1)
        ct_2.append(tmp2)
    return rm,ct_1,ct_2

#计算零知识证明
def ZKP_generate(rm):
    V_3 = (gy.powmod((1 + N),Ra_1,N**2) * gy.powmod(public_key,Ra_2,N**2)) % N**2
    data_sum = 0
    rm_sum = 0
    for m in range(TASK_NUM):
        data_sum += Task_data_2[m]
        rm_sum += rm[m]
    h1 = (gy.powmod((1 + N),data_sum,N**2) * gy.powmod(public_key,rm_sum,N**2)) % N**2
    s = str(h1) + str(V_3)
    e = System_Params.hash_to_group(s,N)
    V_1 = e * data_sum + Ra_1
    V_2 = e * rm_sum + Ra_2
    return e,V_1,V_2,V_3

#扰动数据生成
def perbed_data_generate():
    perbed_data = []
    for m in range(TASK_NUM):
        perbed_data.append(Task_data_2[m] - alpha_2[m])
    return perbed_data

#主函数
def main():
    #t = time.perf_counter()
    rm,ct_1,ct_2 = FE_Encrypt_data()
    e,V_1,V_2,V_3 = ZKP_generate(rm)
    perbed_data_generate()
    #print(f'cost: {time.perf_counter() - t:.8f}s')
    return ct_1,ct_2,e,V_1,V_2,V_3
#main()