import time
import gmpy2 as gy
'''
def float_exponentiation(base, exponent, modulus):
    if exponent < 0:
        base = 1 / base
        exponent = -exponent
    result = 1
    while exponent > 0:
        if exponent % 2 == 1:
            result = (result * base) % modulus
        exponent = exponent // 2
        base = (base * base) % modulus
    return result
t1 = time.perf_counter()
gm.powmod(1+N,22410642974084585442191727643918586647230232556525075962101709016346283694569,N**2)
print(f'cost1: {time.perf_counter() - t1:.8f}s')
t2 = time.perf_counter()
pow(1+N,22410642974084585442191727643918586647230232556525075962101709016346283694569,N**2)
print(f'cost2: {time.perf_counter() - t2:.8f}s')
'''
N = gy.mpz

import math
import random
def random_coprime(N):
    while True:
        r = random.randint(1, N**2)
        if math.gcd(r, N**2) == 1 and r < 259547865834851972091382002968038228950773402130577835577393889579456341418570365070740924924185041600156957995397105785124344244019822318246694431223146705823180820652089647767605214291971407438609404794990881923993371410579498071251281879194977393905604555784716422808521979517843174234645502939777988589826904683863479096548060571530317470960917547398070156503949877433554122726462935178569066017482247621492451720224483801318325147385648231156102095032738975303194933080848778834664809377963653579509453306432073339225350381427709182755112616270667813976301770824118304625351794814809615957621819806997284258644404129947289914728402775426419311394809811506339644899483191813499971246629778090274459368757610270589782786762390709944762207763678143038853850844226277516722401295807863783166404334997008192681205634271153828197408321568725729720803610714595540719832512893199673240289362660291719402855782577044396053272270378115498862876724349842708179502645557221991029900454202762033378768214710586735097305896774879688978284838995703401187558236439179134759566844494922290305924143448830697251502937250657827032041400802254468017820916508880624225977594663471315132458273844596436647445818795902792018622756559015383690663107974928692760682166329930781457436451855238181923941211045489083090415061487741826131031693481068766688058181566028818224334720314798533654795795647914533096998248456048116221598566495841173193352510044679501706758072314804229490239755946670057319174379867010055249879688152385472459632315848537032995160536328798758216141418479598359914381914903531070681222046324086620402110200449137782767901838921708303230032022830324335933850678708765606756887380626381678688014670162852900386154172759473395138492255852428106457021924304055539941184284043781756157852976221195597246265293214323599652074420759700983185920528094914250449323394053523387879722002657812428457768333379707569930338117746638851515201344169480688016193128204502270471524434925020422056562251116296649452896559791215021114419546193649982912578676714247385452168964967056092325788057750862375155340598505669715646777337016496120098011074781456102594050139354781785912317960092091323907375011193077763009222691315472943264122517637967441501184682006612908354509853566005078349002566907626443101231601677936044205144823679671990489418841399978019252235488225064523042407905874991186304732810976885588920213890778615051020675228561059539396217045590090793391923344565817082032763288156631365987150586457310068874831558574049137050579370571795538561430739849492957823227577945844862310427833201555592515206687083995940712672072875897059037382424163470373623600340911393964875922347904101777846476601362786392614574855193656104372170775109433679600647519923792367149117495272090919733404486585375833859194930288034028280672325333416854886212990948038645220570564906986766535457213648754818134476421956955042689227774995831490343498267989354387984299160063526552366110473647052974835449040283689421809277301360788083304126526696424184558801400641672957262028934506273422417890900664283073630309490061621120822935958808034231786283867674383792558412112642726777646931591357695660127472224121662574463670511478216760998619583786832826828076822616109566178105268648111840471681686846721341272564687733887035207802162639184616918635228001286831464542807131550701388099220089332013213555914594482633244432292224176207775395199475146539735010045938710520388949494306894710912227595545424299138765597462084090737197027014271565096114563728324636811872202097737730041032700860701938793863934588453894304867143690597939584090389137418523062878286652470328363593999989191388158010295143704468454658321135084067277528078037577406316769070569182016377027080709569966368792607528867389227852234170648856176274324561147347270818386041957752595:
            return r

g = gy.mpz

# 示例用法
result = random_coprime(N)
print(result)
