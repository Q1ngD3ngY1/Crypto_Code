import gmpy2 as gy
import System_Params
import time


'''-----------------------------------数据参数部分-----------------------------------'''
U_ID = [1,2,3,4,5]
Mission = [1,2,3,4,5]

N = System_Params.N

#感知数据
Task_data_8 = [7000,120,188,70,1899]

#扰动
alpha_8 = [82311233059362826292536458877051790059863656700534136836280522182928647995503,
          85570166055603503963241492763829970922073310076502773750400818987063390197163,
          50581398802476747285065499181964945506412184399799615686276017128518175627321,
          40134484064243320410604578954571590973131345465333677911899673185710823132668,
          104545717417648121169975128314758727909304342625913470898014862589977113121163]

#用户8的公私钥
public_key = System_Params.public_key[7]
private_key = System_Params.private_key[7]

#用于零知识证明的两个随机数
Ra_1 = gy.mpz
Ra_2 = gy.mpz














'''-----------------------------------函数部分-----------------------------------'''

#加密感知数据
def FE_Encrypt_data():
    rm = []
    ct_1 = []
    ct_2 = []
    for m in range(len(Mission)):
        r,tmp1,tmp2 = System_Params.FE_Encrypt(Task_data_8[m],public_key)
        rm.append(r)
        ct_1.append(tmp1)
        ct_2.append(tmp2)
    return rm,ct_1,ct_2

#计算零知识证明
def ZKP_generate(rm):
    V_3 = (gy.powmod((1 + N),Ra_1,N**2) * gy.powmod(public_key,Ra_2,N**2)) % N**2
    data_sum = 0
    rm_sum = 0
    for m in range(len(Mission)):
        data_sum += Task_data_8[m]
        rm_sum += rm[m]
    h1 = (gy.powmod((1 + N),data_sum,N**2) * gy.powmod(public_key,rm_sum,N**2)) % N**2
    s = str(h1) + str(V_3)
    e = System_Params.hash_to_group(s,N)
    V_1 = e * data_sum + Ra_1
    V_2 = e * rm_sum + Ra_2
    return e,V_1,V_2,V_3

#扰动数据生成
def perbed_data_generate():
    perbed_data = []
    for m in range(len(Mission)):
        perbed_data.append(Task_data_8[m] - alpha_8[m])
    return perbed_data

#主函数
def main():
    #t = time.perf_counter()
    rm,ct_1,ct_2 = FE_Encrypt_data()
    e,V_1,V_2,V_3 = ZKP_generate(rm)
    perbed_data_generate()
    #print(f'cost: {time.perf_counter() - t:.8f}s')
    return ct_1,ct_2,e,V_1,V_2,V_3
#main()