import System_Params
import time


'''----------------------参数部分---------------------'''
U_ID = [1,2,3,4,5]
Mission = [1,2,3,4,5]

USER_NUM = 5
TASK_NUM = 25


Task_data_4 = (7000,120,170,50,1500,7000,120,170,50,1500,7000,120,170,50,1500,7000,120,170,50,1500,7000,120,170,50,1500)

alpha_4 = [62312548736497453480832483456650982941473578796180777137784969230386548643384, 
           64054305960678500929777904083234938546857537972919801355215258591653013196486, 
           19835137876183337719973403408040362000981861846821393735688467352621159088332, 
           18746778741407973218597871561523148403714854963385195740040441598826397863894, 
           20201604210824322513505661740215815043165403993207115450011218751649201516349,
           
           62312548736497453480832483456650982941473578796180777137784969230386548643384, 
           64054305960678500929777904083234938546857537972919801355215258591653013196486, 
           19835137876183337719973403408040362000981861846821393735688467352621159088332, 
           18746778741407973218597871561523148403714854963385195740040441598826397863894, 
           20201604210824322513505661740215815043165403993207115450011218751649201516349,
           
           62312548736497453480832483456650982941473578796180777137784969230386548643384, 
           64054305960678500929777904083234938546857537972919801355215258591653013196486, 
           19835137876183337719973403408040362000981861846821393735688467352621159088332, 
           18746778741407973218597871561523148403714854963385195740040441598826397863894, 
           20201604210824322513505661740215815043165403993207115450011218751649201516349,
           
           62312548736497453480832483456650982941473578796180777137784969230386548643384, 
           64054305960678500929777904083234938546857537972919801355215258591653013196486, 
           19835137876183337719973403408040362000981861846821393735688467352621159088332, 
           18746778741407973218597871561523148403714854963385195740040441598826397863894, 
           20201604210824322513505661740215815043165403993207115450011218751649201516349,
           
           62312548736497453480832483456650982941473578796180777137784969230386548643384, 
           64054305960678500929777904083234938546857537972919801355215258591653013196486, 
           19835137876183337719973403408040362000981861846821393735688467352621159088332, 
           18746778741407973218597871561523148403714854963385195740040441598826397863894, 
           20201604210824322513505661740215815043165403993207115450011218751649201516349]




'''----------------------函数部分---------------------'''

#扰动的生成
def perb_generate(q):
    r = System_Params.rand_from_group(q)
    return r
'''
alpha_1 = []
for m in range(TASK_NUM):
    alpha_1.append(perb_generate(System_Params.Q))
print(alpha_1)
'''

#扰动后的数据生成
def perbed_data_generate():
    perbed_data = []
    for m in range(TASK_NUM):
        perbed_data.append(Task_data_4[m] - alpha_4[m])
    return perbed_data

#主函数
def main():
    t = time.perf_counter()
    perb_generate(System_Params.Q)
    perbed_data = perbed_data_generate()
    print(f'cost: {time.perf_counter() - t:.8f}s')
    print(perbed_data)
main()
