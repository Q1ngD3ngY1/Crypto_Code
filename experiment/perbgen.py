import random

q1 = 115792089237316195423570985008687907852837564279074904382605163141518161494337
q2 = 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095
TASK_NUM = 25

def rand_from_primegroup(q):
    number = random.randint(1,q-1)
    return number

'''
r = []
for i in range(20):
    r.append(rand_from_primegroup(q1))
print(r)
'''
d = (4000,125,174,76,2000,4000,125,174,76,2000,4000,125,174,76,2000,4000,125,174,76,2000,4000,125,174,76,2000)
a = [22410642974084585442191727643918586647230232556525075962101709016346283694569, 
           68574235962049804543682472313140990616965871425187131346222779247232111250905, 
           43139019699327115711617780202783040092862808628341895782744823069479854552953, 
           107077420960787047367844643446953157544199051322244644306625049394723563232185, 
           16523082419060126492750584071126670442347370916635012443244906593568651899054,
           
           22410642974084585442191727643918586647230232556525075962101709016346283694569, 
           68574235962049804543682472313140990616965871425187131346222779247232111250905, 
           43139019699327115711617780202783040092862808628341895782744823069479854552953, 
           107077420960787047367844643446953157544199051322244644306625049394723563232185, 
           16523082419060126492750584071126670442347370916635012443244906593568651899054,
           
           22410642974084585442191727643918586647230232556525075962101709016346283694569, 
           68574235962049804543682472313140990616965871425187131346222779247232111250905, 
           43139019699327115711617780202783040092862808628341895782744823069479854552953, 
           107077420960787047367844643446953157544199051322244644306625049394723563232185, 
           16523082419060126492750584071126670442347370916635012443244906593568651899054,
           
           22410642974084585442191727643918586647230232556525075962101709016346283694569, 
           68574235962049804543682472313140990616965871425187131346222779247232111250905, 
           43139019699327115711617780202783040092862808628341895782744823069479854552953, 
           107077420960787047367844643446953157544199051322244644306625049394723563232185, 
           16523082419060126492750584071126670442347370916635012443244906593568651899054,
           
           22410642974084585442191727643918586647230232556525075962101709016346283694569, 
           68574235962049804543682472313140990616965871425187131346222779247232111250905, 
           43139019699327115711617780202783040092862808628341895782744823069479854552953, 
           107077420960787047367844643446953157544199051322244644306625049394723563232185, 
           16523082419060126492750584071126670442347370916635012443244906593568651899054]
def M1(data,beta):
    perb_data = []
    for m in range(TASK_NUM):
        perb_data.append(data[m] * beta[m])
    return perb_data
def M2(data,alpha):
    perb_data = []
    for m in range(TASK_NUM):
        perb_data.append(data[m] - alpha[m])
    return perb_data

print(M2(d,a))
